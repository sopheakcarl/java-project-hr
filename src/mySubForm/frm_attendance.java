/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mySubForm;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import myClass.MyDateFormat;
import myClass.attendance;



/**
 *
 * @author sopheakcarl
 */
public class frm_attendance extends javax.swing.JPanel {

    /**
     * Creates new form frm_attendance
     */
    DefaultTableModel modelAttendanceLog;
    MyDateFormat _myFormat = new MyDateFormat();
    attendance _attendence = new attendance();

    public frm_attendance() {
        initComponents();
        lbDownloadStatus.setText("");
        modelAttendanceLog=(DefaultTableModel)tbl_attendanceLog.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_attendanceLog = new javax.swing.JTable();
        btnDownloadLog = new javax.swing.JButton();
        lbDownloadStatus = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1266, 530));

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tbl_attendanceLog.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tbl_attendanceLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ac-No", "Name", "sTime", "Machine", "Verify Mode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_attendanceLog.setRowHeight(20);
        tbl_attendanceLog.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jScrollPane1.setViewportView(tbl_attendanceLog);
        if (tbl_attendanceLog.getColumnModel().getColumnCount() > 0) {
            tbl_attendanceLog.getColumnModel().getColumn(0).setMinWidth(40);
            tbl_attendanceLog.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbl_attendanceLog.getColumnModel().getColumn(0).setMaxWidth(40);
            tbl_attendanceLog.getColumnModel().getColumn(1).setMinWidth(50);
            tbl_attendanceLog.getColumnModel().getColumn(1).setPreferredWidth(50);
            tbl_attendanceLog.getColumnModel().getColumn(1).setMaxWidth(50);
            tbl_attendanceLog.getColumnModel().getColumn(4).setPreferredWidth(0);
            tbl_attendanceLog.getColumnModel().getColumn(5).setMinWidth(70);
            tbl_attendanceLog.getColumnModel().getColumn(5).setPreferredWidth(70);
            tbl_attendanceLog.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        btnDownloadLog.setText("Download Log");
        btnDownloadLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadLogActionPerformed(evt);
            }
        });

        lbDownloadStatus.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbDownloadStatus.setForeground(new java.awt.Color(255, 102, 0));
        lbDownloadStatus.setText("Download Success");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnDownloadLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbDownloadStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 346, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDownloadLog)
                    .addComponent(lbDownloadStatus))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Attendance Log", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1261, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDownloadLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadLogActionPerformed
        modelAttendanceLog.setRowCount(0);
        getLog(_attendence.getAttLastRecord());
        int count=0;
        for(int i=tbl_attendanceLog.getRowCount()-1;i>=0;i--)
        {
            String id = tbl_attendanceLog.getValueAt(i, 0).toString();
            String acno = tbl_attendanceLog.getValueAt(i, 1).toString();
            String name =tbl_attendanceLog.getValueAt(i, 2).toString();
            String sTime = tbl_attendanceLog.getValueAt(i, 3).toString();
            String machine =tbl_attendanceLog.getValueAt(i, 4).toString();
            String type = tbl_attendanceLog.getValueAt(i, 5).toString();
            count +=1;
            _attendence.setAttendance(acno, id  , name, sTime, machine, type);  
        }
        lbDownloadStatus.setText("Download Success | "+count +" Record");
    }//GEN-LAST:event_btnDownloadLogActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownloadLog;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbDownloadStatus;
    private javax.swing.JTable tbl_attendanceLog;
    // End of variables declaration//GEN-END:variables

   private void getLog(String date)
   {
       try
       {
           String sql;
           if(date.equals(""))
           {
               sql="SELECT USERINFO.Badgenumber, USERINFO.Name, CHECKINOUT.CHECKTIME, CHECKINOUT.sn, CHECKINOUT.VERIFYCODE\n" +
                       "FROM CHECKINOUT LEFT JOIN USERINFO ON CHECKINOUT.USERID = USERINFO.USERID ORDER BY CHECKINOUT.CHECKTIME DESC";
           }
           else
           {
               sql="SELECT USERINFO.Badgenumber, USERINFO.Name, CHECKINOUT.CHECKTIME, CHECKINOUT.sn, CHECKINOUT.VERIFYCODE\n" +
                       "FROM CHECKINOUT LEFT JOIN USERINFO ON CHECKINOUT.USERID = USERINFO.USERID\n" +
                       "WHERE (((CHECKINOUT.CHECKTIME)>#"+date+"#)) ORDER BY CHECKINOUT.CHECKTIME DESC;";
           }
           Statement st =teamkhyalhr.MainForm.fpConnection.createStatement();
           ResultSet rs =st.executeQuery(sql);
           while(rs.next())
           {
                    Object[] row ={getOrder(),rs.getString(1),rs.getString(2),_myFormat.getSqlMyDateAmPm(rs.getString(3)) ,rs.getString(4),verifyMode(rs.getString(5))};
                    modelAttendanceLog.addRow(row);
           }
       }
       catch(SQLException ex)
       {
           JOptionPane.showMessageDialog(null, ex.getMessage());
       }
   }
   private int getOrder()
   {
        int rowCount =tbl_attendanceLog.getRowCount();
        if(rowCount==0)
            return 1;
        else
            return Integer.valueOf(tbl_attendanceLog.getValueAt(rowCount-1, 0).toString())+1;  
   }
   
   private String verifyMode(String id)
   {
       String result;
       
        switch (id) {
            case "0":
                result= "FP/PW/RF";break;
            case "1":
                result= "FP";break;
            case "2":
                result= "PIN";break;
            case "3":
                result= "PW";break;
            case "4":
                result= "RF";break;
            case "5":
                result= "FP/PW";break;  
            case "6":
                result= "FP/RF";break;
            case "7":
                result= "PW/RF";break;
            case "8":
                result= "PIN&FP";break;
            case "9":
                result= "FP&PW";break;
            case "10":
                result= "FP&RF";break;
            case "11":
                result= "PW&RF";break;
            case "12":
                result= "FP&PW&RF";break;
            case "13":
                result= "PIN&FP&PW";break;
            case "14":
                result= "PIN&(RF/PIN)";break;
            default:
                result ="Not Found";break;
        }
       return result;
   }

}
