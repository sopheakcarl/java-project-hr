/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mySubForm;

import java.awt.ComponentOrientation;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import myClass.MyDateFormat;
import myClass.employees;


/**
 *
 * @author sopheakcarl
 */
public class frm_employees extends javax.swing.JPanel {

    /**
     * 
     * Creates new form Employees
     */
        DefaultTableModel modelDownloadFp;
        DefaultTableModel modelDownloadSys;
        DefaultTableModel modelUploadFp;
        DefaultTableModel modelUploadSys;
        DefaultTableModel modelEmployees;
        employees _employees = new employees();
        MyDateFormat _myDateFormat = new MyDateFormat();

        public frm_employees() {
        initComponents();
        modelDownloadFp=(DefaultTableModel)tbl_download_fp.getModel();
        modelDownloadSys=(DefaultTableModel)tbl_download_sys.getModel();
        modelUploadFp=(DefaultTableModel)tbl_upload_fp.getModel();
        modelUploadSys=(DefaultTableModel)tbl_upload_sys.getModel();
        modelEmployees=(DefaultTableModel)tblEmployees.getModel();
        
        JTableHeader headerEmp = tbl_download_fp.getTableHeader();
        JTableHeader headerEmp1 = tbl_download_fp.getTableHeader();
        headerEmp.setFont(new Font("Dialog",Font.PLAIN,12));
        headerEmp1.setFont(new Font("Dialog",Font.PLAIN,12));
        
        Date now = new Date();
        txtDob.setDate(now);
        txtHireDate.setDate(now);
        
        getEmployees();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tab_download = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_download_fp = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_download_sys = new javax.swing.JTable();
        btn_download_load_emp = new javax.swing.JButton();
        btn_download_download_emp = new javax.swing.JButton();
        lbLoadStatus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tab_upload = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_upload_sys = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_upload_fp = new javax.swing.JTable();
        btn_load_emp1 = new javax.swing.JButton();
        btn_upload_emp = new javax.swing.JButton();
        lbLoadStatus1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tab_add = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnDisable = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDob = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        txtHireDate = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        cmbPrivilige = new java.awt.Choice();
        cmbGender = new java.awt.Choice();
        btnDisable1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblEmployees = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1266, 539));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("jButton1");

        jButton2.setText("jButton1");

        jButton3.setText("jButton1");

        jButton4.setText("jButton1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(948, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        tab_download.setBackground(new java.awt.Color(255, 255, 255));

        tbl_download_fp.setBackground(new java.awt.Color(255, 255, 255));
        tbl_download_fp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "State", "ID", "Name", "Gender", "Address", "Phone", "DOB", "HireDate", "Privilige"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_download_fp.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jScrollPane1.setViewportView(tbl_download_fp);
        if (tbl_download_fp.getColumnModel().getColumnCount() > 0) {
            tbl_download_fp.getColumnModel().getColumn(0).setMinWidth(40);
            tbl_download_fp.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbl_download_fp.getColumnModel().getColumn(0).setMaxWidth(40);
            tbl_download_fp.getColumnModel().getColumn(1).setMinWidth(40);
            tbl_download_fp.getColumnModel().getColumn(1).setPreferredWidth(40);
            tbl_download_fp.getColumnModel().getColumn(1).setMaxWidth(40);
            tbl_download_fp.getColumnModel().getColumn(3).setMinWidth(60);
            tbl_download_fp.getColumnModel().getColumn(3).setPreferredWidth(60);
            tbl_download_fp.getColumnModel().getColumn(3).setMaxWidth(60);
            tbl_download_fp.getColumnModel().getColumn(8).setMinWidth(70);
            tbl_download_fp.getColumnModel().getColumn(8).setPreferredWidth(70);
            tbl_download_fp.getColumnModel().getColumn(8).setMaxWidth(70);
        }

        tbl_download_sys.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Gender", "Address", "Phone", "DOB", "HireDate", "Privilige"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_download_sys.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jScrollPane2.setViewportView(tbl_download_sys);
        if (tbl_download_sys.getColumnModel().getColumnCount() > 0) {
            tbl_download_sys.getColumnModel().getColumn(0).setMinWidth(40);
            tbl_download_sys.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbl_download_sys.getColumnModel().getColumn(0).setMaxWidth(40);
            tbl_download_sys.getColumnModel().getColumn(2).setMinWidth(60);
            tbl_download_sys.getColumnModel().getColumn(2).setPreferredWidth(60);
            tbl_download_sys.getColumnModel().getColumn(2).setMaxWidth(60);
            tbl_download_sys.getColumnModel().getColumn(7).setMinWidth(70);
            tbl_download_sys.getColumnModel().getColumn(7).setPreferredWidth(70);
            tbl_download_sys.getColumnModel().getColumn(7).setMaxWidth(70);
        }

        btn_download_load_emp.setText("Load Emp");
        btn_download_load_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_download_load_empActionPerformed(evt);
            }
        });

        btn_download_download_emp.setText("Dowload");
        btn_download_download_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_download_download_empActionPerformed(evt);
            }
        });

        lbLoadStatus.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbLoadStatus.setForeground(new java.awt.Color(255, 102, 0));
        lbLoadStatus.setText("10 Employees loaded");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        jLabel9.setText("Data In Finger Print");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 153));
        jLabel12.setText("Data In Finger System");

        javax.swing.GroupLayout tab_downloadLayout = new javax.swing.GroupLayout(tab_download);
        tab_download.setLayout(tab_downloadLayout);
        tab_downloadLayout.setHorizontalGroup(
            tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_downloadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_downloadLayout.createSequentialGroup()
                        .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab_downloadLayout.createSequentialGroup()
                                .addComponent(btn_download_load_emp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_download_download_emp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbLoadStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(420, 420, 420))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_downloadLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        tab_downloadLayout.setVerticalGroup(
            tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_downloadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_download_load_emp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tab_downloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_download_download_emp)
                        .addComponent(lbLoadStatus)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Download ", tab_download);

        tab_upload.setBackground(new java.awt.Color(255, 255, 255));

        tbl_upload_sys.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "State", "ID", "Name", "Gender", "Address", "Phone", "DOB", "HireDate", "Privilige"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_upload_sys);

        tbl_upload_fp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Gender", "Address", "Phone", "DOB", "HireDate", "Privilige"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_upload_fp);

        btn_load_emp1.setText("Load Emp");
        btn_load_emp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_load_emp1ActionPerformed(evt);
            }
        });

        btn_upload_emp.setText("Upload");
        btn_upload_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_upload_empActionPerformed(evt);
            }
        });

        lbLoadStatus1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbLoadStatus1.setForeground(new java.awt.Color(255, 102, 0));
        lbLoadStatus1.setText("10 Employees loaded");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Data In System");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Data In Finger Print");

        javax.swing.GroupLayout tab_uploadLayout = new javax.swing.GroupLayout(tab_upload);
        tab_upload.setLayout(tab_uploadLayout);
        tab_uploadLayout.setHorizontalGroup(
            tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_uploadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_uploadLayout.createSequentialGroup()
                        .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tab_uploadLayout.createSequentialGroup()
                        .addComponent(btn_load_emp1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_upload_emp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbLoadStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab_uploadLayout.setVerticalGroup(
            tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_uploadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tab_uploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_load_emp1)
                    .addComponent(btn_upload_emp)
                    .addComponent(lbLoadStatus1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Upload", tab_upload);

        tab_add.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        btnDisable.setBackground(new java.awt.Color(0, 102, 102));
        btnDisable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnDisable.setForeground(new java.awt.Color(255, 255, 255));
        btnDisable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_disable_18.png"))); // NOI18N
        btnDisable.setText("Disable");
        btnDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisableActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(0, 102, 102));
        btnEdit.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_edit_18.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(0, 102, 102));
        btnNew.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_add_18.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtAddress.setBackground(new java.awt.Color(255, 255, 255));
        txtAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtAddress.setForeground(new java.awt.Color(0, 0, 0));
        txtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtAddress.setEnabled(false);

        txtFirstName.setBackground(new java.awt.Color(255, 255, 255));
        txtFirstName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(0, 0, 0));
        txtFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtFirstName.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icons8_Collaborator_Male_20px_1.png"))); // NOI18N
        jLabel1.setText("  First Name");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_address_20.png"))); // NOI18N
        jLabel2.setText("  Address");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_phone_20.png"))); // NOI18N
        jLabel3.setText("  Phone");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_calendar_20.png"))); // NOI18N
        jLabel7.setText("  DOB");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_security_20.png"))); // NOI18N
        jLabel8.setText("  Privilige");

        txtDob.setBackground(new java.awt.Color(255, 255, 255));
        txtDob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtDob.setForeground(new java.awt.Color(0, 0, 0));
        txtDob.setDateFormatString("dd/MM/yyyy");
        txtDob.setEnabled(false);
        txtDob.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icons8_Collaborator_Male_20px_1.png"))); // NOI18N
        jLabel6.setText("  Last Name");

        txtLastName.setBackground(new java.awt.Color(255, 255, 255));
        txtLastName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(0, 0, 0));
        txtLastName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtLastName.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_gender_20.png"))); // NOI18N
        jLabel10.setText("  Gender");

        txtPhone.setBackground(new java.awt.Color(255, 255, 255));
        txtPhone.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtPhone.setForeground(new java.awt.Color(0, 0, 0));
        txtPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtPhone.setEnabled(false);

        txtHireDate.setBackground(new java.awt.Color(255, 255, 255));
        txtHireDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtHireDate.setForeground(new java.awt.Color(0, 0, 0));
        txtHireDate.setDateFormatString("dd/MM/yyyy");
        txtHireDate.setEnabled(false);
        txtHireDate.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_calendar_20.png"))); // NOI18N
        jLabel11.setText("  Hire Date");

        cmbPrivilige.add("User");
        cmbPrivilige.add("Enroller");
        cmbPrivilige.add("Manager");
        cmbPrivilige.add("Supervisor");
        cmbPrivilige.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cmbPrivilige.setEnabled(false);

        cmbGender.add("Male");
        cmbGender.add("Female");
        cmbGender.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cmbGender.setEnabled(false);

        btnDisable1.setBackground(new java.awt.Color(0, 102, 102));
        btnDisable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnDisable1.setForeground(new java.awt.Color(255, 255, 255));
        btnDisable1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/icon_cancel_18.png"))); // NOI18N
        btnDisable1.setText("Cancel");
        btnDisable1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisable1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress)
                            .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(115, 115, 115)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbPrivilige, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDisable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDisable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(btnDisable)
                                .addGap(6, 6, 6)
                                .addComponent(btnDisable1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbPrivilige, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel8)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(txtHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addContainerGap())))
        );

        tblEmployees.setBackground(new java.awt.Color(255, 255, 255));
        tblEmployees.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Gender", "Address", "Phone", "DOB", "HireDate", "Privilige"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployees.setRowHeight(23);
        tblEmployees.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tblEmployees.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblEmployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblEmployees);
        if (tblEmployees.getColumnModel().getColumnCount() > 0) {
            tblEmployees.getColumnModel().getColumn(0).setMinWidth(1);
            tblEmployees.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblEmployees.getColumnModel().getColumn(0).setMaxWidth(50);
            tblEmployees.getColumnModel().getColumn(3).setMinWidth(60);
            tblEmployees.getColumnModel().getColumn(3).setPreferredWidth(60);
            tblEmployees.getColumnModel().getColumn(3).setMaxWidth(60);
            tblEmployees.getColumnModel().getColumn(8).setMinWidth(100);
            tblEmployees.getColumnModel().getColumn(8).setPreferredWidth(100);
            tblEmployees.getColumnModel().getColumn(8).setMaxWidth(100);
        }

        javax.swing.GroupLayout tab_addLayout = new javax.swing.GroupLayout(tab_add);
        tab_add.setLayout(tab_addLayout);
        tab_addLayout.setHorizontalGroup(
            tab_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tab_addLayout.setVerticalGroup(
            tab_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_addLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Employee", tab_add);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 545, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_download_load_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_download_load_empActionPerformed
        
        downloadFP("download");
        downloadDB("download");
        for(int i=0;i<tbl_download_fp.getRowCount();i++)
        {
            for(int j=0;j<tbl_download_sys.getRowCount();j++)
            {
                if(tbl_download_fp.getValueAt(i, 1).equals(tbl_download_sys.getValueAt(j, 0)))
                {
                    tbl_download_fp.setValueAt(false, i, 0);
                }
            }
        }
    }//GEN-LAST:event_btn_download_load_empActionPerformed

    private void btn_download_download_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_download_download_empActionPerformed
        downloadEmp("download");

        for(int i =0;i<tbl_download_fp.getRowCount();i++)
        {
            if(tbl_download_fp.getValueAt(i, 0).equals(true))
            {
                String name = tbl_download_fp.getValueAt(i, 2).toString();
                String[] splitStr = name.trim().split(" ");
                String id =tbl_download_fp.getValueAt(i, 1).toString();
                String firstName;
                String lastName;
                if(splitStr.length==1)
                {
                     firstName=splitStr[0];
                     lastName ="";
                }
                else
                {
                     firstName=splitStr[0];
                     lastName =splitStr[1];  
                }
                
                String gender = tbl_download_fp.getValueAt(i, 3).toString();
                String address =tbl_download_fp.getValueAt(i, 4).toString();
                String phone =tbl_download_fp.getValueAt(i, 5).toString();
                String dob =tbl_download_fp.getValueAt(i, 6).toString();
                String hiredate =tbl_download_fp.getValueAt(i, 7).toString();
                String privilige =tbl_download_fp.getValueAt(i, 8).toString();
                _employees.downloadEmployees(id , firstName, lastName, gender, address, phone, dob, hiredate, privilige);
            }
        }
        JOptionPane.showMessageDialog(null, "Employees Download Successful");
    }//GEN-LAST:event_btn_download_download_empActionPerformed

    private void btn_load_emp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_load_emp1ActionPerformed
        // TODO add your handling code here:
        downloadFP("upload");
        downloadDB("upload");
        for(int i=0;i<tbl_upload_sys.getRowCount();i++)
        {
            for(int j=0;j<tbl_upload_fp.getRowCount();j++)
            {
                if(tbl_upload_sys.getValueAt(i, 1).equals(tbl_upload_fp.getValueAt(j, 0)))
                {
                    tbl_upload_sys.setValueAt(false, i, 0);
                }
            }
        }
    }//GEN-LAST:event_btn_load_emp1ActionPerformed

    private void btn_upload_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upload_empActionPerformed
        // TODO add your handling code here:
        downloadEmp("upload");

        for(int i =0;i<tbl_upload_sys.getRowCount();i++)
        {
            if(tbl_upload_sys.getValueAt(i, 0).equals(true))
            {               
                String id =tbl_upload_sys.getValueAt(i, 1).toString();
                String name = tbl_upload_sys.getValueAt(i, 2).toString();
                String gender = tbl_upload_sys.getValueAt(i, 3).toString();
                String address =tbl_upload_sys.getValueAt(i, 4).toString();
                String phone =tbl_upload_sys.getValueAt(i, 5).toString();
                String dob =tbl_upload_sys.getValueAt(i, 6).toString();
                String hiredate =tbl_upload_sys.getValueAt(i, 7).toString();
                String privilige =tbl_upload_sys.getValueAt(i, 8).toString();
                _employees.uploadEmployees(id , name, gender, address, phone, dob, hiredate, getPrivilige(privilige));
            }
        }
    }//GEN-LAST:event_btn_upload_empActionPerformed

    private void btnDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisableActionPerformed


    }//GEN-LAST:event_btnDisableActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int row =tblEmployees.getSelectedRow();
        String id="";
        if(row<=0) JOptionPane.showMessageDialog(null, "Please Select Row To Edit");
        else
        {
            if(btnEdit.getText().equals("Edit"))
            {
                
                String firstName =tblEmployees.getValueAt(row, 1).toString();
                String lastName =tblEmployees.getValueAt(row, 2).toString();
                String gender = tblEmployees.getValueAt(row, 3).toString();
                String address = tblEmployees.getValueAt(row, 4).toString();
                String phone =tblEmployees.getValueAt(row, 5).toString();
                String dob = tblEmployees.getValueAt(row, 6).toString();
                String hiredate =tblEmployees.getValueAt(row, 7).toString();
                String privilige=tblEmployees.getValueAt(row, 8).toString();

                if(gender.equals("Male")) gender="M";
                else gender="F";
                Date dDob = _myDateFormat.getDateFromMyDate(dob);
                Date dHireDate=_myDateFormat.getDateFromMyDate(hiredate);

                txtFirstName.setText(firstName);
                txtLastName.setText(lastName);
                cmbGender.select(gender);
                txtAddress.setText(address);
                txtPhone.setText(phone);
                txtDob.setDate(dDob);
                txtHireDate.setDate(dHireDate);
                cmbPrivilige.select(privilige);   
                btnEdit.setText("Update");
                
                enableField();
                tblEmployees.setEnabled(false);
                btnNew.setEnabled(false);
                btnDisable.setEnabled(false);
            }
            else
            {
                if(txtFirstName.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee First Name");
                txtFirstName.requestFocus();
            }
            else if(txtLastName.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Last Name");
                txtLastName.requestFocus();
            }
            else if(txtAddress.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Address");
                txtAddress.requestFocus();
            }
            else if(txtPhone.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Phone Number");
                txtPhone.requestFocus();
            }
            else 
            {
                id = tblEmployees.getValueAt(row, 0).toString();
                String dob=_myDateFormat.getMyDateFromDate(txtDob.getDate());
                String hiredate=_myDateFormat.getMyDateFromDate(txtHireDate.getDate());
                _employees.updateEmpToDb(id,txtFirstName.getText(), txtLastName.getText(), cmbGender.getSelectedItem(), txtAddress.getText(), txtPhone.getText(), dob,hiredate,getPrivilige(cmbPrivilige.getSelectedItem()));
                _employees.updateEmpToFpDb(id,txtFirstName.getText(), txtLastName.getText(), cmbGender.getSelectedItem(), txtAddress.getText(), txtPhone.getText(), dob,hiredate,getPrivilige(cmbPrivilige.getSelectedItem()));
                updateEmpToTbl(row,txtFirstName.getText(),txtLastName.getText(), cmbGender.getSelectedItem(), txtAddress.getText(), txtPhone.getText(), dob,hiredate,cmbPrivilige.getSelectedItem());
                btnEdit.setText("Edit");
                disableField();
                clearField();
                tblEmployees.setEnabled(true);
                btnNew.setEnabled(false);
                btnDisable.setEnabled(false);
            }
                
                
            }
        }
            

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        if(btnNew.getText().equals("New"))
        {
            enableField();
            btnNew.setText("Save");
            btnEdit.setEnabled(false);
            btnDisable.setEnabled(false);
        }
        else
        {
            if(txtFirstName.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee First Name");
                txtFirstName.requestFocus();
            }
            else if(txtLastName.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Last Name");
                txtLastName.requestFocus();
            }
            else if(txtAddress.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Address");
                txtAddress.requestFocus();
            }
            else if(txtPhone.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee Phone Number");
                txtPhone.requestFocus();
            }
            else 
            {
                
                String dob=_myDateFormat.getMyDateFromDate(txtDob.getDate());
                String hiredate=_myDateFormat.getMyDateFromDate(txtHireDate.getDate());
                _employees.addEmpToDb(getLastId()+1+"",txtFirstName.getText(), txtLastName.getText(), cmbGender.getSelectedItem(), txtAddress.getText(), txtPhone.getText(), dob,hiredate,getPrivilige(cmbPrivilige.getSelectedItem()));
                addEmpToTbl(txtFirstName.getText(),txtLastName.getText(), cmbGender.getSelectedItem(), txtAddress.getText(), txtPhone.getText(), dob,hiredate,cmbPrivilige.getSelectedItem());
                disableField();
                clearField();
                btnNew.setText("New");  
                btnEdit.setEnabled(false);
                btnDisable.setEnabled(false);
            }
            
        }
        
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblEmployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeesMouseClicked

    }//GEN-LAST:event_tblEmployeesMouseClicked

    private void btnDisable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisable1ActionPerformed

        disableField();
        clearField();
        tblEmployees.setEnabled(true);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDisable.setEnabled(true);
        btnNew.setText("New");
        btnEdit.setText("Edit");
    }//GEN-LAST:event_btnDisable1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisable;
    private javax.swing.JButton btnDisable1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btn_download_download_emp;
    private javax.swing.JButton btn_download_load_emp;
    private javax.swing.JButton btn_load_emp1;
    private javax.swing.JButton btn_upload_emp;
    private java.awt.Choice cmbGender;
    private java.awt.Choice cmbPrivilige;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbLoadStatus;
    private javax.swing.JLabel lbLoadStatus1;
    private javax.swing.JPanel tab_add;
    private javax.swing.JPanel tab_download;
    private javax.swing.JPanel tab_upload;
    private javax.swing.JTable tblEmployees;
    private javax.swing.JTable tbl_download_fp;
    private javax.swing.JTable tbl_download_sys;
    private javax.swing.JTable tbl_upload_fp;
    private javax.swing.JTable tbl_upload_sys;
    private javax.swing.JTextField txtAddress;
    private com.toedter.calendar.JDateChooser txtDob;
    private javax.swing.JTextField txtFirstName;
    private com.toedter.calendar.JDateChooser txtHireDate;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    
    private void downloadFP(String check)
    {
        try
        {
            int countLoad=0;
            if(check.equals("download"))
                modelDownloadFp.setRowCount(0);
            if(check.equals("upload"))
                modelUploadFp.setRowCount(0);
            String sql="SELECT USERINFO.Badgenumber, USERINFO.Name, USERINFO.Gender, USERINFO.street, USERINFO.PAGER, USERINFO.BIRTHDAY, USERINFO.HIREDDAY, USERINFO.privilege\n" +
                        "FROM USERINFO;";
            Statement st =teamkhyalhr.MainForm.fpConnection.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next())
            {
                String dob = rs.getString(6)+"";
                String hireDate = rs.getString(7)+"";
                if(dob.equals("null"))
                    dob = "null";
                else
                    dob = _myDateFormat.getMyShortDate(rs.getString(6)+"");
                
                if(hireDate.equals("null"))
                    hireDate="null";
                else
                    hireDate =_myDateFormat.getMyShortDate(rs.getString(7)+"");
                countLoad+=1;
                if(check.equals("download"))
                {
                    Object[] row={true,rs.getString(1)+"",rs.getString(2)+"",rs.getString(3)+"",rs.getString(4)+"",rs.getString(5)+"",dob,hireDate,getPriviligeID(rs.getString(8))};
                    modelDownloadFp.addRow(row);
                }
                if(check.equals("upload"))
                {
                    Object[] row={rs.getString(1)+"",rs.getString(2)+"",rs.getString(3)+"",rs.getString(4)+"",rs.getString(5)+"",dob,hireDate,getPriviligeID(rs.getString(8))};
                    modelUploadFp.addRow(row);
                }
                
            }
            if(check.equals("download"))
                 lbLoadStatus.setText(countLoad+" Employees Loaded From Finger Print ");
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    private void downloadDB(String check)
    {
        try
        {
            int countLoad=0;
            if(check.equals("download"))
                modelDownloadSys.setRowCount(0);
            if(check.equals("upload"))
                modelUploadSys.setRowCount(0);
            String sql="SELECT emp_id,first_name,last_name,gender,address,contact,dob,hire_date,privilige\n" +
                        "FROM tbl_employees";
            Statement st =teamkhyalhr.MainForm.con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next())
            {
                String dob = rs.getString(7)+"";
                String hireDate =rs.getString(8)+"";
                if(dob.equals("null"))
                    dob="null";
                else
                    dob=_myDateFormat.getMyShortSqlDate(dob);
                
                if(hireDate.equals("null"))
                    hireDate="null";
                else
                    hireDate=_myDateFormat.getMyShortSqlDate(hireDate);
                countLoad+=1;
                if(check.equals("download"))
                {
                    Object[] row={rs.getString(1),rs.getString(2)+" "+rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),dob,hireDate,getPriviligeID(rs.getString(9))};
                    modelDownloadSys.addRow(row);
                }
                if(check.equals("upload"))
                {
                    Object[] row={true,rs.getString(1),rs.getString(2)+" "+rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),dob,hireDate,getPriviligeID(rs.getString(9))};
                    modelUploadSys.addRow(row);
                }
                
            }
            if(check.equals("download"))
                lbLoadStatus.setText(lbLoadStatus.getText()+" |  "+countLoad+" Employees Load From System");
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    private String getPriviligeID(String id)
    {
        String result;
            switch (id) {
                case "0":
                    result="User";break;
                case "1":
                    result="Enroller";break;
                case "2":
                    result="Manager";break;
                case "3":
                    result="Supervisor";break;
                default:
                    result="Invalid";break;
            }
        return result;
    }
    private String getPrivilige(String name)
    {
        String result;
            switch (name) {
                case "User":
                    result="0";break;
                case "Enroller":
                    result="1";break;
                case "Manager":
                    result="2";break;
                case "Supervisor":
                    result="3";break;
                default:
                    result="-1";break;
            }
        return result;
    }
    private void downloadEmp(String check)
    {
        if(check.equals("download"))
        {
            for(int i = 0;i<tbl_download_fp.getRowCount();i++)
            { 
                if(tbl_download_fp.getValueAt(i, 0).toString().equals("true"))
                {
                    String id = tbl_download_fp.getValueAt(i, 1).toString();
                    String name = tbl_download_fp.getValueAt(i, 2).toString();
                    String gender=tbl_download_fp.getValueAt(i, 3).toString();
                    String address = tbl_download_fp.getValueAt(i, 4).toString();
                    String phone = tbl_download_fp.getValueAt(i, 5).toString();
                    String dob = tbl_download_fp.getValueAt(i, 6).toString();
                    String hireDate=tbl_download_fp.getValueAt(i, 7).toString();
                    String privilige=tbl_download_fp.getValueAt(i, 8).toString();
                           
                    Object[] row ={id,name,gender,address,phone,dob,hireDate,privilige};
                    modelDownloadSys.addRow(row);
                }
            }
        }
        if(check.equals("upload"))
        {
            for(int i = 0;i<tbl_upload_sys.getRowCount();i++)
            { 
                if(tbl_upload_sys.getValueAt(i, 0).toString().equals("true"))
                {
                    String id = tbl_upload_sys.getValueAt(i, 1).toString();
                    String name = tbl_upload_sys.getValueAt(i, 2).toString();
                    String gender=tbl_upload_sys.getValueAt(i, 3).toString();
                    String address = tbl_upload_sys.getValueAt(i, 4).toString();
                    String phone = tbl_upload_sys.getValueAt(i, 5).toString();
                    String dob = tbl_upload_sys.getValueAt(i, 6).toString();
                    String hireDate=tbl_upload_sys.getValueAt(i, 7).toString();
                    String privilige=tbl_upload_sys.getValueAt(i, 8).toString();
                           
                    Object[] row ={id,name,gender,address,phone,dob,hireDate,privilige};
                    modelUploadFp.addRow(row);
                }
            }
        }
            
        //modelDownloadSys.setRowCount(0);
        
    }
    private void addEmpToTbl(String firstname,String lastname,String gender,String address,String phone,String dob,String hiredate,String privilige)
    {
        if(gender.equals("Male"))
            gender="M";
        else
            gender="F";
        Object[] row={getLastId()+1,firstname,lastname,gender,address,phone,dob,hiredate,privilige};
        modelEmployees.addRow(row);
    }
    private void updateEmpToTbl(int row,String firstname,String lastname,String gender,String address,String phone,String dob,String hiredate,String privilige)
    {
        if(gender.equals("Male")) gender="M";
        else gender="F";
        tblEmployees.setValueAt(firstname, row, 1);
        tblEmployees.setValueAt(lastname, row, 2);
        tblEmployees.setValueAt(gender, row, 3);
        tblEmployees.setValueAt(address, row, 4);
        tblEmployees.setValueAt(phone, row, 5);
        tblEmployees.setValueAt(dob, row, 6);
        tblEmployees.setValueAt(hiredate, row, 7);
        tblEmployees.setValueAt(privilige, row, 8);
    }
    private int getLastId()
    {
        if(tblEmployees.getRowCount()<=0)
            return 0;
        else
            return Integer.valueOf(tblEmployees.getValueAt(tblEmployees.getRowCount()-1, 0).toString());
    }
    private void enableField()
    {
        txtFirstName.setEnabled(true);
        txtLastName.setEnabled(true);
        cmbGender.setEnabled(true);
        txtAddress.setEnabled(true);
        txtPhone.setEnabled(true);
        txtDob.setEnabled(true);
        txtHireDate.setEnabled(true);
        cmbPrivilige.setEnabled(true);
    }
    private void disableField()
    {
        txtFirstName.setEnabled(false);
        txtLastName.setEnabled(false);
        cmbGender.setEnabled(false);
        txtAddress.setEnabled(false);
        txtPhone.setEnabled(false);
        txtDob.setEnabled(false);
        txtHireDate.setEnabled(false);
        cmbPrivilige.setEnabled(false);
    }
    private void clearField()
    {
        txtFirstName.setText("");
        txtLastName.setText("");
        txtAddress.setText("");
        txtPhone.setText("");
    }
    void getEmployees()
    {
        try
        {
            String sql="SELECT emp_id,first_name,last_name,gender,address,contact,dob,hire_date,privilige\n" +
                        "FROM tbl_employees";
            Statement st = teamkhyalhr.MainForm.con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next())
            {
                String dob=rs.getString(7);
                String hiredate =rs.getString(8);
                if(dob.equals("null")) dob="null";
                else dob=_myDateFormat.getMyShortSqlDate(dob);
                
                if(hiredate.equals("null")) hiredate="null";
                else hiredate=_myDateFormat.getMyShortSqlDate(hiredate);
                            
                Object[] row ={rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),dob,hiredate,getPriviligeID(rs.getString(9))};
                modelEmployees.addRow(row);
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    //txtName.setBorder(BorderFactory.createLineBorder(Color.red));
}
